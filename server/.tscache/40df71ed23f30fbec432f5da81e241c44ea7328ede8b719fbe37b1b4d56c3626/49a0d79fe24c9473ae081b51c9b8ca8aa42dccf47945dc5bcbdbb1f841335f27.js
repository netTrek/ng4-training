"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
console.log('AuthService');
var AuthService = (function () {
    // tslint:disable-next-line
    // http://localhost:3000/auth?response_type=access%20id&client_id=netTrek&client_secret=netTrek&scope=profile%20users&redirect_uri=http://localhost/4200&state=4711
    function AuthService(req, res) {
        this.req = req;
        this.res = res;
        var _a = req.query, response_type = _a.response_type, client_id = _a.client_id, client_secret = _a.client_secret, scope = _a.scope, redirect_uri = _a.redirect_uri, state = _a.state;
        res.set('Content-Type', 'text/html');
        res.status(200)
            .send(new Buffer("\n    <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>login</title>\n</head>\n<body>\n  <form action=\"/login\" method=\"post\">\n    <input type=\"hidden\" name=\"response_type\" value=\"" + response_type + "\">\n    <input type=\"hidden\" name=\"client_id\" value=\"" + client_id + "\">\n    <input type=\"hidden\" name=\"client_secret\" value=\"" + client_secret + "\">\n    <input type=\"hidden\" name=\"scope\" value=\"" + scope + "\">\n    <input type=\"hidden\" name=\"redirect_uri\" value=\"" + redirect_uri + "\">\n    <input type=\"hidden\" name=\"state\" value=\"" + state + "\">\n    <table>\n      <tr>\n        <td><label for=\"username\">username</label></td>\n        <td><input type=\"text\" name=\"username\" id=\"username\" placeholder=\"netTrek\" required value=\"netTrek\"></td>\n      </tr>\n      <tr>\n        <td><label for=\"username\">password</label></td>\n        <td><input type=\"password\" name=\"password\" id=\"password\" required value=\"netTrek\"></td>\n      </tr>\n      <tr>\n        <td><label for=\"access_scope\">allow access to " + scope + "</label></td>\n        <td><input type=\"checkbox\" name=\"access_scope\" id=\"access_scope\"></td>\n      </tr>\n    </table>\n    <input type=\"submit\" value=\"submit\">\n</form>\n</body>\n</html>\n    "));
    }
    return AuthService;
}());
function auth(req, res, next) {
    var as = new AuthService(req, res);
}
exports.auth = auth;
var Login = (function () {
    function Login(req, res) {
        this.req = req;
        this.res = res;
        var _a = req.body, response_type = _a.response_type, client_id = _a.client_id, client_secret = _a.client_secret, scope = _a.scope, redirect_uri = _a.redirect_uri, state = _a.state, access_scope = _a.access_scope, username = _a.username, password = _a.password;
    }
    return Login;
}());
function login(req, res, next) {
    var as = new Login(req, res);
}
exports.login = login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N1ZW5sdWUvV2Vic2l0ZXMvdHJhaW5pbmcvZ2ZuLTIwMTctMTEvZ2ZuL3NlcnZlci9zcmMvYXV0aFNlcnZpY2UudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWVubHVlL1dlYnNpdGVzL3RyYWluaW5nL2dmbi0yMDE3LTExL2dmbi9zZXJ2ZXIvc3JjL2F1dGhTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLEdBQUcsQ0FBRyxhQUFhLENBQUUsQ0FBQztBQUM5QjtJQUNFLDJCQUEyQjtJQUMzQixtS0FBbUs7SUFDbksscUJBQXNCLEdBQUcsRUFBVSxHQUFHO1FBQWhCLFFBQUcsR0FBSCxHQUFHLENBQUE7UUFBVSxRQUFHLEdBQUgsR0FBRyxDQUFBO1FBQzlCLElBQUEsY0FBbUYsRUFBakYsZ0NBQWEsRUFBRSx3QkFBUyxFQUFFLGdDQUFhLEVBQUUsZ0JBQUssRUFBRSw4QkFBWSxFQUFFLGdCQUFLLENBQWU7UUFDMUYsR0FBRyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDckMsR0FBRyxDQUFDLE1BQU0sQ0FBRSxHQUFHLENBQUM7YUFDWixJQUFJLENBQUcsSUFBSSxNQUFNLENBQUMsdU9BUzZCLGFBQWEsbUVBQ2pCLFNBQVMsdUVBQ0wsYUFBYSwrREFDckIsS0FBSyxzRUFDRSxZQUFZLCtEQUNuQixLQUFLLDRlQVdJLEtBQUssa05BUXhELENBQUUsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxBQTFDRCxJQTBDQztBQUVELGNBQXVCLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtJQUNuQyxJQUFNLEVBQUUsR0FBRyxJQUFJLFdBQVcsQ0FBRyxHQUFHLEVBQUUsR0FBRyxDQUFFLENBQUM7QUFDMUMsQ0FBQztBQUZELG9CQUVDO0FBRUQ7SUFDRSxlQUFzQixHQUFHLEVBQVUsR0FBRztRQUFoQixRQUFHLEdBQUgsR0FBRyxDQUFBO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBQTtRQUM5QixJQUFBLGFBQ2dDLEVBRDlCLGdDQUFhLEVBQUUsd0JBQVMsRUFBRSxnQ0FBYSxFQUFFLGdCQUFLLEVBQUUsOEJBQVksRUFBRSxnQkFBSyxFQUFFLDhCQUFZLEVBQ2pGLHNCQUFRLEVBQUUsc0JBQVEsQ0FBYTtJQUd6QyxDQUFDO0lBQ0gsWUFBQztBQUFELENBQUMsQUFQRCxJQU9DO0FBQ0QsZUFBd0IsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO0lBQ3BDLElBQU0sRUFBRSxHQUFHLElBQUksS0FBSyxDQUFFLEdBQUcsRUFBRSxHQUFHLENBQUUsQ0FBQztBQUNuQyxDQUFDO0FBRkQsc0JBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZyAoICdBdXRoU2VydmljZScgKTtcbmNsYXNzIEF1dGhTZXJ2aWNlIHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXG4gIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hdXRoP3Jlc3BvbnNlX3R5cGU9YWNjZXNzJTIwaWQmY2xpZW50X2lkPW5ldFRyZWsmY2xpZW50X3NlY3JldD1uZXRUcmVrJnNjb3BlPXByb2ZpbGUlMjB1c2VycyZyZWRpcmVjdF91cmk9aHR0cDovL2xvY2FsaG9zdC80MjAwJnN0YXRlPTQ3MTFcbiAgY29uc3RydWN0b3IgKCBwcml2YXRlIHJlcSwgcHJpdmF0ZSByZXMgKSB7XG4gICAgY29uc3QgeyByZXNwb25zZV90eXBlLCBjbGllbnRfaWQsIGNsaWVudF9zZWNyZXQsIHNjb3BlLCByZWRpcmVjdF91cmksIHN0YXRlIH0gPSByZXEucXVlcnk7XG4gICAgcmVzLnNldCgnQ29udGVudC1UeXBlJywgJ3RleHQvaHRtbCcpO1xuICAgIHJlcy5zdGF0dXMgKDIwMClcbiAgICAgICAuc2VuZCAoIG5ldyBCdWZmZXIoYFxuICAgIDwhRE9DVFlQRSBodG1sPlxuPGh0bWwgbGFuZz1cImVuXCI+XG48aGVhZD5cbiAgICA8bWV0YSBjaGFyc2V0PVwiVVRGLThcIj5cbiAgICA8dGl0bGU+bG9naW48L3RpdGxlPlxuPC9oZWFkPlxuPGJvZHk+XG4gIDxmb3JtIGFjdGlvbj1cIi9sb2dpblwiIG1ldGhvZD1cInBvc3RcIj5cbiAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJyZXNwb25zZV90eXBlXCIgdmFsdWU9XCIke3Jlc3BvbnNlX3R5cGV9XCI+XG4gICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiY2xpZW50X2lkXCIgdmFsdWU9XCIke2NsaWVudF9pZH1cIj5cbiAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJjbGllbnRfc2VjcmV0XCIgdmFsdWU9XCIke2NsaWVudF9zZWNyZXR9XCI+XG4gICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwic2NvcGVcIiB2YWx1ZT1cIiR7c2NvcGV9XCI+XG4gICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwicmVkaXJlY3RfdXJpXCIgdmFsdWU9XCIke3JlZGlyZWN0X3VyaX1cIj5cbiAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJzdGF0ZVwiIHZhbHVlPVwiJHtzdGF0ZX1cIj5cbiAgICA8dGFibGU+XG4gICAgICA8dHI+XG4gICAgICAgIDx0ZD48bGFiZWwgZm9yPVwidXNlcm5hbWVcIj51c2VybmFtZTwvbGFiZWw+PC90ZD5cbiAgICAgICAgPHRkPjxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJ1c2VybmFtZVwiIGlkPVwidXNlcm5hbWVcIiBwbGFjZWhvbGRlcj1cIm5ldFRyZWtcIiByZXF1aXJlZCB2YWx1ZT1cIm5ldFRyZWtcIj48L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPjxsYWJlbCBmb3I9XCJ1c2VybmFtZVwiPnBhc3N3b3JkPC9sYWJlbD48L3RkPlxuICAgICAgICA8dGQ+PGlucHV0IHR5cGU9XCJwYXNzd29yZFwiIG5hbWU9XCJwYXNzd29yZFwiIGlkPVwicGFzc3dvcmRcIiByZXF1aXJlZCB2YWx1ZT1cIm5ldFRyZWtcIj48L3RkPlxuICAgICAgPC90cj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPjxsYWJlbCBmb3I9XCJhY2Nlc3Nfc2NvcGVcIj5hbGxvdyBhY2Nlc3MgdG8gJHtzY29wZX08L2xhYmVsPjwvdGQ+XG4gICAgICAgIDx0ZD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImFjY2Vzc19zY29wZVwiIGlkPVwiYWNjZXNzX3Njb3BlXCI+PC90ZD5cbiAgICAgIDwvdHI+XG4gICAgPC90YWJsZT5cbiAgICA8aW5wdXQgdHlwZT1cInN1Ym1pdFwiIHZhbHVlPVwic3VibWl0XCI+XG48L2Zvcm0+XG48L2JvZHk+XG48L2h0bWw+XG4gICAgYCApKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXV0aCAoIHJlcSwgcmVzLCBuZXh0ICkge1xuICBjb25zdCBhcyA9IG5ldyBBdXRoU2VydmljZSAoIHJlcSwgcmVzICk7XG59XG5cbmNsYXNzIExvZ2luIHtcbiAgY29uc3RydWN0b3IgKCBwcml2YXRlIHJlcSwgcHJpdmF0ZSByZXMgKSB7XG4gICAgY29uc3QgeyByZXNwb25zZV90eXBlLCBjbGllbnRfaWQsIGNsaWVudF9zZWNyZXQsIHNjb3BlLCByZWRpcmVjdF91cmksIHN0YXRlLCBhY2Nlc3Nfc2NvcGUsXG4gICAgICAgICAgICB1c2VybmFtZSwgcGFzc3dvcmR9ID0gcmVxLmJvZHk7XG5cblxuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gbG9naW4gKCByZXEsIHJlcywgbmV4dCApIHtcbiAgY29uc3QgYXMgPSBuZXcgTG9naW4oIHJlcSwgcmVzICk7XG59XG4iXX0=